PMF - PlatinumSrc Map File/Format

- .pmf file extension
- Current version is 0.0
- All data should be little endian
- LZ4 should be used for compression

Format:

    <Header> <Data>

    Header:
        <char[4]: {'P', 'M', 'F', 0}>
        <u8: Major version> <u8: Minor version>
        <char[1...]: Name {..., 0}> <char[1...]: Authors {..., 0}> <char[1...]: Description {..., 0}>
        <u32: Creation time (the time at which the map finished compiling in UTC Unix seconds)>
        <<u8: 1..16>: Gamemode count> <char[1...]: Gamemode {..., 0}>...
        <<u8: 1..8>: Difficulty count> <char[1...]: Difficulty {..., 0}>...
    Data:
        <u16: Material count>
        <u16: Dynamic light count>
        <u16: Fast light count>
        <u32: Decompressed <Shared Data> size> <u32: Compressed <Shared Data> size> <Compressed <Shared Data>>
        <u32: Decompressed <Server Data> size> <u32: Compressed <Server Data> size> <Compressed <Server Data>>
        <u32: Decompressed <Client Data> size> <u32: Compressed <Client Data> size> <Compressed <Client Data>>
        <u8[3]: Sector XYZ count (must be at least (1, 1, 1))> <u8: Sector size (2^n)> <Sector>...
        <<String table>: Server string table>
        <<String table>: Client string table>

    Shared data:
        [Shared material data]...
    Server data:
        <u8: Team count> [Team data]...
        <Entity data (see 'entities.txt')>
    Client data:
        [Client material data]...
        [Fast light]...

    Fast light:
        <float[3]: Color>

    Sector:
        <u8[3]: Load radius>
        <u8: Lightmap count minus 1> <Lightmap>...
        <u16: Extra lightmap count> [Extra lightmap]...
        <u32: Decompressed <Shared sector data> size>
        <u32: Compressed <Shared sector data> size>
        <Compressed <Shared sector data>>
        <u32: Decompressed <Client sector data> size>
        <u32: Compressed <Client sector data> size>
        <Compressed <Client sector data>>
    Shared sector data:
        <u16: Prop count> [Prop]...
        <u16: Cube count minus 1> <Cube>...
    Client sector data:
        <u24: Triangle count> [Triangle]...
        <u16: Affecting dynamic light count>
        [
            <u16: Dynamic light>
            <u8: Extra lightmap count> [Extra lightmap]...
        ]...
        <u16: Affecting fast light count>
        [
            <u16: Fast light>
            <u32: Affected points> 
            [ <float: Multiplier> <u8: Lightmap group> <u24: Point index> ]...
        ]...
        <u32: Dynamic light reference count> [u16: Dynamic light]...
        <u32: Fast light reference count> [u16: Fast light]...

    Lightmap:
        <u8: 2^(n) size>
        <u32: Compressed data size> <Compressed <u16: Luxel (RGB565)>...>
    Extra lightmap:
        <u8: Base lightmap>
        <u32: Compressed data size> <Compressed <u16: Luxel (RGB565)>...>

    Triangle:
        <<Point>[3]>
    Point:
        <float[3]: XYZ>
        <float[2]: Texture UV>
        <float[2]: Lightmap UV>

    Cube: <Cube type> <Cube data>
    Cube type: <u8:
                   <2 bits: 0>
                   <1 bit: Is chunk>
                   <1 bit: Has lighting>
                   <4 bits: { CUBE_EMPTY | CUBE_PARENT | CUBE_SOLID | CUBE_ANGLED | CUBE_EXTSOLID | CUBE_EXTANGLED }>
               >
    Cube data: [Cube lighting data]
               [Cube chunk data]
               [ { <Parent cube data> | <Solid cube data> | <Angled cube data> | <Extended solid cube data> | <Extended angled cube data> } ]

    Cube lighting data:
        <u8[3]: Base light>
        <u32: Index in sector dynamic light references> <u16: Dynamic light count>
        <u32: Index in sector fast light references> <u16: Fast light count>
    Cube chunk data:
        <u16: Prop count> [u16: Prop index]...
        <u8: Visible sectors>
        [
            <u8[3]: Sector>
            <u16: Visible chunk cubes minus 1> <u16: Cube index>...
        ]...
        <u32: Index in visibility data> <{u16|u32}: # of cubes>

    Parent cube data:
        <u16: (+X, +Y, +Z) child index>
        <u16: (-X, +Y, +Z) child index>
        <u16: (+X, +Y, -Z) child index>
        <u16: (-X, +Y, -Z) child index>
        <u16: (+X, -Y, +Z) child index>
        <u16: (-X, -Y, +Z) child index>
        <u16: (+X, -Y, -Z) child index>
        <u16: (-X, -Y, -Z) child index>
    Solid cube data:
        <u16: Material>
        <u8: Lightmap>
        <u24: Triangle index>
        <u8:
            <2 bits: 0>
            <1 bit: +X has face> <1 bit: +Y has face> <1 bit: +Z has face>
            <1 bit: -X has face> <1 bit: -Y has face> <1 bit: -Z has face>
        >
    Angled cube data:
        <u16: Material>
        <u8: Lightmap>
        <u24: Triangle index>
        <u16:
            <2 bits: 0>
            <2 bits: Plane # of triangles>
            <2 bits: +X # of triangles> <2 bits: +Y # of triangles> <2 bits: +Z # of triangles>
            <2 bits: -X # of triangles> <2 bits: -Y # of triangles> <2 bits: -Z # of triangles>
        >
        <float: Fill (0 is empty, 1 is full)>
        <float: Pitch (0 points up, 1 and -1 point down, positive rolls forward, negative rolls backward)>
        <float: Yaw (0 aims forward, 1 and -1 aim backward, positive goes clockwise, negative goes counterclockwise)>
    Extended solid cube data:
        <u16: +X material> <u16: +Y material> <u16: +Z material>
        <u16: -X material> <u16: -Y material> <u16: -Z material>
        <u8: Lightmap>
        <u24: Triangle index>
        <u8: +X # of triangles> <u8: +Y # of triangles> <u8: +Z # of triangles>
        <u8: -X # of triangles> <u8: -Y # of triangles> <u8: -Z # of triangles>
    Extended angled cube data:
        <u16: +X material> <u16: +Y material> <u16: +Z material>
        <u16: -X material> <u16: -Y material> <u16: -Z material>
        <u8: Lightmap>
        <u24: Triangle index>
        <u8: +X # of triangles>
        <u8: +X # of triangles> <u8: +Y # of triangles> <u8: +Z # of triangles>
        <u8: -X # of triangles> <u8: -Y # of triangles> <u8: -Z # of triangles>
        <float: Fill (0 is empty, 1 is full)>
        <float: Pitch (0 points up, 1 and -1 point down, positive rolls forward, negative rolls backward)>
        <float: Yaw (0 aims forward, 1 and -1 aim backward, positive goes clockwise, negative goes counterclockwise)>

    Shared prop data:
        <float[3]: Bounding box origin>
        <float[3]: Bounding box radius>
    Client prop data:
        <<Client string>: Model resource path>

    Shared material data:
        <u8:
            <6 bits: 0>
            <1 bit: Has alpha>
            <1 bit: Is fluid>
        >
        <float: Speed multiplier>
        <float: Acceleration multiplier>
        <float: Minimum speed to cause damage>
        <float: Base damage>
        <float: Extra damage per meter per second>
    Client material data:
        <<Client string>: Material appearance resource path>

    Team data: <<Server string>: Name> <float[3]: Color>

    String table:  <u32: Decompressed size> <u32: Compressed size> <char[2...]: Strings {0, ..., 0}>
    Server string: <u32: Byte index in the server string table>
    Client string: <u32: Byte index in the client string table>


