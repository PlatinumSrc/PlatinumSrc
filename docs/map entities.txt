This is an extension of 'maps (pmf).txt'

- Entity names starting with 'player:' are reserved for player entities generated by the server.
- Signal names starting with 'unique:' are reserved for "unnamed" signals generated by the compiler.
- Signal inputs or outputs with empty names are ignored unless specified otherwise.
- For global or level entities with positions, the position is relative to the center of the center chunk. For chunk
  entities, the position is relative to the center of that chunk.

Entities:
    <u32: i16/u16 count> [u16: i16/u16 data]...
    <u32: i32/u32/float count> [u32: i32/u32/float data]...
    <u32: i64/u64/double count> [u64: i64/u64/double data]...
    <u32: Entity data container count> [Entity data container]...
    <u32: Entity count> [Entity]...

Entity:
    <u32: Gamemodes bitmask>
    <<String>: Name>
    <u32: Custom property count>
    { <u32: 0> | <u32: Data container index> | <u32: Index in i32/u32/float table to <u32: Data container index>...> }
    <u8: <Entity type>>
    <Entity data>

Entity type:
    { ENT_DUMMY
    | ENT_HEADLESS
    | ENT_GENERIC
    | ENT_PROP
    | ENT_CUBE
    | ENT_INTERSECTABLE
    | ENT_DOOR
    | ENT_TRIGGER
    | ENT_LIGHT
    | ENT_BEAM
    | ENT_PARTICLES
    | ENT_GIBS
    | ENT_GLOW
    | ENT_TEXT
    | ENT_BILLBLOARD
    | ENT_DECAL
    | ENT_PROJECTILE
    | ENT_PUSH
    | ENT_BROADCASTER
    | ENT_COUNTER
    | ENT_EXCOUNTER
    | ENT_TIMER
    | ENT_EXTIMER
    | ENT_SETTER
    | ENT_AUDIOEMITTER
    | ENT_DYNLIGHTCTL
    | ENT_FASTLIGHTCTL }

Entity data:
    [
        { <Headless entity data>
        | <Generic entity data>
        | <Prop entity data>
        | <Cube entity data>
        | <Intersectable entity data>
        | <Door entity data>
        | <Trigger box entity data>
        | <Light entity data>
        | <Beam entity data>
        | <Particle emitter entity data>
        | <Gib emitter entity data>
        | <Glow entity data>
        | <Text entity data>
        | <Billboard entity data>
        | <Decal entity data>
        | <Projectile entity data>
        | <Push entity data>
        | <Broadcaster entity data>
        | <Counter entity data>
        | <Extended counter entity data>
        | <Timer entity data>
        | <Extended timer entity data>
        | <Setter entity data>
        | <Audio emitter entity data>
        | <Dynamic light controller entity data>
        | <Fast light controller entity data> }
    ]

Headless entity data:
    <<String>: Script resource path>

Generic entity data:
    <u8:
        <1 bits: 0>
        <1 bit: High quality shadow>
        <1 bit: No collision>
        <1 bit: Do not inherit scale>
        <1 bit: Do not inherit rotation>
        <1 bit: Follow tail of bone>
        <1 bit: Hidden>
        <1 bit: Inactive>
    >
    <float[3]: XYZ position>
    <float[3]: XYZ rotation>
    <<String>: Entity to follow>
    <<String>: Bone to follow>
    <float[3]: (+X, +Y, +Z) bounding box offset>
    <float[3]: (-X, -Y, -Z) bounding box offset>
    <float: Mass>
    <float: Drag>
    <<String>: Script resource path>
    <<String>: Model resource path>
    <<String>: Shadow texture resource path (empty for none)>
    <float[2]: Shadow size>
    <<String>: Signal to activate>
    <<String>: Signal to deactivate>
    <<String>: Signal to toggle activation>
    <<String>: Signal to show>
    <<String>: Signal to hide>
    <<String>: Signal to toggle visibility>
    <<String>: Signal to enable collision>
    <<String>: Signal to disable collision>
    <<String>: Signal to toggle collision>

Prop entity data:
    <u16:
        <7 bits: 0>
        <1 bit: High quality shadow>
        <1 bit: Do not loop animation>
        <1 bit: Better physics (ignored if 'physics' bit is not set)>
        <1 bit: Physics>
        <1 bit: No collision>
        <1 bit: Do not inherit scale>
        <1 bit: Do not inherit rotation>
        <1 bit: Follow tail of bone>
        <1 bit: Hidden>
    >
    <float[3]: XYZ position>
    <float[3]: XYZ rotation>
    <<String>: Entity to follow>
    <<String>: Bone to follow>
    <float[3]: (+X, +Y, +Z) bounding box offset>
    <float[3]: (-X, -Y, -Z) bounding box offset>
    <float: Mass>
    <float: Drag>
    <<String>: Model resource path>
    <<String>: Animation>
    <<String>: Shadow texture resource path (empty for none)>
    <float[2]: Shadow size>
    <<String>: Signal to show>
    <<String>: Signal to hide>
    <<String>: Signal to toggle visibility>
    <<String>: Signal to enable collision>
    <<String>: Signal to disable collision>
    <<String>: Signal to toggle collision>
    <<String>: Signal to start animation>
    <<String>: Signal to pause animation>
    <<String>: Signal to resume animation>
    <<String>: Signal to stop animation>

Cube entity data:
    <u16:
        <2 bits: 0>
        <1 bit: Show -Z face> <1 bit: Show -Y face> <1 bit: Show -X face>
        <1 bit: Show +Z face> <1 bit: Show +Y face> <1 bit: Show +X face>
        <2 bits: 0>
        <1 bit: Draw backfaces>
        <1 bit: No collision>
        <1 bit: Do not inherit scale>
        <1 bit: Do not inherit rotation>
        <1 bit: Follow tail of bone>
        <1 bit: Hidden>
    >
    <float[3]: XYZ position>
    <float[3]: XYZ rotation>
    <<String>: Entity to follow>
    <<String>: Bone to follow>
    <<Entity box corner offsets>: Shape>
    <<String>: +X material> <<String>: +Y material> <<String>: +Z material>
    <<String>: -X material> <<String>: -Y material> <<String>: -Z material>
    <float[2]: +X top left texture UV> <float[2]: +X top right texture UV>
    <float[2]: +X bottom left texture UV> <float[2]: +X bottom right texture UV>
    <float[2]: +Y top left texture UV> <float[2]: +Y top right texture UV>
    <float[2]: +Y bottom left texture UV> <float[2]: +Y bottom right texture UV>
    <float[2]: +Z top left texture UV> <float[2]: +Z top right texture UV>
    <float[2]: +Z bottom left texture UV> <float[2]: +Z bottom right texture UV>
    <float[2]: -X top left texture UV> <float[2]: -X top right texture UV>
    <float[2]: -X bottom left texture UV> <float[2]: -X bottom right texture UV>
    <float[2]: -Y top left texture UV> <float[2]: -Y top right texture UV>
    <float[2]: -Y bottom left texture UV> <float[2]: -Y bottom right texture UV>
    <float[2]: -Z top left texture UV> <float[2]: -Z top right texture UV>
    <float[2]: -Z bottom left texture UV> <float[2]: -Z bottom right texture UV>
    <<String>: +X physics material> <<String>: +Y physics material> <<String>: +Z physics material>
    <<String>: -X physics material> <<String>: -Y physics material> <<String>: -Z physics material>
    <<String>: Signal to show>
    <<String>: Signal to hide>
    <<String>: Signal to toggle visibility>
    <<String>: Signal to enable collision>
    <<String>: Signal to disable collision>
    <<String>: Signal to toggle collision>

Intersectable entity data:
    <u8:
        <4 bits:
            { ENT_INTERSECTABLE_AABB
            | ENT_INTERSECTABLE_SHPERE
            | ENT_INTERSECTABLE_BOX }
        >
        <3 bits: 0>
        <1 bit: Follow tail of bone>
    >
    <float[3]: XYZ position>
    <float[3]: XYZ rotation>
    <<String>: Entity to follow>
    <<String>: Bone to follow>
    { <u32: Index in i32/u32/float table to <float[3]: Radius>
    | <u32: Index in i32/u32/float table to <<Entity box corner offsets>: Box bounds> }

Door entity data:
    <u16:
        <2 bits: 0>
        <1 bit: Show -Z face> <1 bit: Show -Y face> <1 bit: Show -X face>
        <1 bit: Show +Z face> <1 bit: Show +Y face> <1 bit: Show +X face>
        <2 bits: 0>
        <1 bit: No collision>
        <1 bit: Do not inherit scale>
        <1 bit: Do not inherit rotation>
        <1 bit: Follow tail of bone>
        <1 bit: Draw backfaces>
        <1 bit: Open>
    >
    <float[3]: XYZ closed position>
    <float[3]: XYZ closed rotation>
    <float[3]: XYZ closed scale>
    <float[3]: XYZ open position>
    <float[3]: XYZ open rotation>
    <float[3]: XYZ open scale>
    <<String>: Entity to follow>
    <<String>: Bone to follow>
    <<Entity box corner offsets>: Collider>
    <<String>: Model resource path>
    <<String>: Open animation>
    <<String>: Close animation>
    <<String>: Physics material>
    <u32: Delay in microseconds before opening>
    <u32: Open duration in microseconds (0 to use the animation duration)>
    <u32: Delay in microseconds before closing>
    <u32: Close duration in microseconds (0 to use the animation duration)>
    <<String>: Signal to open>
    <<String>: Signal to close>
    <<String>: Signal to toggle open/closed>

Trigger box entity data:
    <u8:
        <1 bit: Continuous>
        <1 bit: Mutual>
        <1 bit: Replace initiator with self>
        <1 bit: Team filter is blacklist>
        <1 bit: Type filter is blacklist>
        <1 bit: Enable type filter>
        <1 bit: Follow tail of bone>
        <1 bit: Inactive>
    >
    <float[3]: XYZ position>
    <<String>: Entity to follow>
    <<String>: Bone to follow>
    <<Entity box corner offsets>: Bounds>
    <u8: Type filter { <Entity type> | ENT_PLAYER } (ignored if 'enable type filter' bit is not set)>
    <<String>: Team filter (if empty, do not filter team)>
    <<String>: Output when entering>
    <<String>: Output when entered>
    <<String>: Output when fully entered>
    <<String>: Output when exiting>
    <<String>: Output when exited>
    <<String>: Output when fully exited>
    <<String>: Signal to activate>
    <<String>: Signal to deactivate>
    <<String>: Signal to toggle activation>

Light entity data:
    <u8:
        <4 bits:
            { ENT_LIGHT_POINT
            | ENT_LIGHT_SPOT
            | ENT_LIGHT_AREA }
        >
        <2 bits: 0>
        <1 bit: Follow tail of bone>
        <1 bit: Inactive>
    >
    <float[3]: XYZ position>
    <<String>: Entity to follow>
    <<String>: Bone to follow>
    <u8[3]: RGB color>
    <float: Intensity>
    <float[3]: Size>
    <float: Range>
    { <u32: 0>
    | <float: Cone radius>
    | <u32: Index in i32/u32/float table to <Light entity area angles>> }
    <<String>: Signal to activate>
    <<String>: Signal to deactivate>
    <<String>: Signal to toggle activation>
Light entity area angles:
    <float: Start X angle> <float: End X angle>
    <float: Start Y angle> <float: End Y angle>
    <float: Start Z angle> <float: End Z angle>

Beam entity data:
    <u8:
        <4 bits: 0>
        <1 bit: Texture wrap is not relative to size>
        <1 bit: Tail follows tail of bone>
        <1 bit: Head follows tail of bone>
        <1 bit: Inactive>
    >
    <float[3]: Head XYZ position>
    <float[3]: Head XYZ direction>
    <<String>: Entity for head to follow>
    <<String>: Bone for head to follow>
    <float[3]: Tail XYZ position>
    <float[3]: Tail XYZ direction>
    <<String>: Entity for tail to follow>
    <<String>: Bone for tail to follow>
    <u32: Pattern bitmask>
    <u32: Pattern advance time in microseconds>
    <u8: Segment count>
    <u8: Curve>
    <float: Radius>
    <<String>: Material>
    <float: Texture wrap>
    <float: Scroll>
    <u32: Ripple noise seed>
    <float: Max ripple noise at head>
    <float: Max ripple noise at middle>
    <float: Max ripple noise at tail>
    <u8: Ripple noise smoothening>
    <float: Ripple noise speed>
    <u32: Alpha noise seed>
    <u8: Max alpha noise>
    <u8: Alpha noise smoothening>
    <float: Alpha noise speed>
    <u32: Radius noise seed>
    <float: Max radius noise>
    <u8: Radius noise smoothening>
    <float: Radius noise speed>
    <<String>: Signal to activate>
    <<String>: Signal to deactivate>
    <<String>: Signal to toggle activation>

Particle emitter entity data:
    <u8:
        <6 bits: 0>
        <1 bit: Follow tail of bone>
        <1 bit: Inactive>
    >
    <float[3]: XYZ position>
    <<String>: Entity to follow>
    <<String>: Bone to follow>
    <u32: Random seed>
    <u16: Particle count>
    <float[3]: XYZ direction and velocity>
    <float[3]: XYZ direction randomness>
    <float[3]: XYZ velocity randomness>
    <float: Gravity influence>
    <float: Drag influence>
    <float: Wind influence>
    <<String>: Material>
    <float[2]: Top left texture UV> <float[2]: Top right texture UV>
    <float[2]: Bottom left texture UV> <float[2]: Bottom right texture UV>
    <u8: Trail segment count>
    <u32: Trail duration in microseconds>
    <<String>: Trail material>
    <float[2]: Top left trail texture UV> <float[2]: Top right trail texture UV>
    <float[2]: Bottom left trail texture UV> <float[2]: Bottom right trail texture UV>
    <u32: Min fade in duration in microseconds>
    <u32: Max fade in duration in microseconds>
    <u8: Min initial alpha multiplier>
    <u8: Max initial alpha multiplier>
    <float[2]: Min initial XY size>
    <float[2]: Max initial XY size>
    <u32: Min duration in microseconds>
    <u32: Max duration in microseconds>
    <u8: Min alpha multiplier>
    <u8: Max alpha multiplier>
    <float[2]: Min XY size>
    <float[2]: Max XY size>
    <u32: Min fade out duration in microseconds>
    <u32: Max fade out duration in microseconds>
    <u8: Min final alpha multiplier>
    <u8: Max final alpha multiplier>
    <float[2]: Min final XY size>
    <float[2]: Max final XY size>
    <<String>: Signal to activate>
    <<String>: Signal to deactivate>
    <<String>: Signal to toggle activation>

Gib emitter entity data:
    <u8:
        <5 bits: 0>
        <1 bit: Better physics>
        <1 bit: Follow tail of bone>
        <1 bit: Delete after activation>
    >
    <float[3]: XYZ position>
    <<String>: Entity to follow>
    <<String>: Bone to follow>
    <<String>: Model resource path>
    <<String>: Animation to use parts list from>
    <float[3]: XYZ direction and velocity>
    <float[3]: XYZ direction randomness>
    <float[3]: XYZ velocity randomness>
    <float: Mass>
    <float: Drag>
    <float: Gravity influence>
    <float: Wind influence>
    <u8: Collision sound count>
    { <u32: 0>
    | <<String>: Collision sound resource path>
    | <u32: Index in i32/u32/float table to <<String>: Collision sound resource path>...> }
    <u32: Delay before fade in microseconds>
    <u32: Fade time in microseconds>
    <<String>: Signal to activate (activated immediately if empty)>

Glow entity data:
    <u8:
        <7 bits: 0>
        <1 bit: Follow tail of bone>
    >
    <float[3]: XYZ position>
    <<String>: Entity to follow>
    <<String>: Bone to follow>
    <float[3]: Top left corner offset XYZ>
    <float[3]: Top right corner offset XYZ>
    <float[3]: Bottom left corner offset XYZ>
    <float[3]: Bottom right corner offset XYZ>
    <<String>: Material>
    <float[2]: XY radius>

Text entity data:
    <u8:
        <3 bits: 0>
        <1 bit: Interpret escape codes>
        <1 bit: Vertical center>
        <1 bit: Horizontal center>
        <1 bit: Follow tail of bone>
        <1 bit: Hidden>
    >
    <float[3]: XYZ position>
    <<String>: Entity to follow>
    <<String>: Bone to follow>
    <float: View distance (less then or equal to 0 to be viewable at any distance)>
    <float[4]: Left, right, top, and bottom offsets>
    <<String>: Font resource path>
    <float: Font size>
    <u8[4]: RGBA font color>
    <<String>: Text>
    <<String>: Signal to show>
    <<String>: Signal to hide>
    <<String>: Signal to toggle visibility>

Billboard entity data:
    <u8:
        <6 bits: 0>
        <1 bit: Follow tail of bone>
        <1 bit: Hidden>
    >
    <float[3]: XYZ position>
    <<String>: Entity to follow>
    <<String>: Bone to follow>
    <float: View distance (less then or equal to 0 to be viewable at any distance)>
    <float[2]: Top left XY offset> <float[2]: Top right XY offset>
    <float[2]: Bottom left XY offset> <float[2]: Bottom right XY offset>
    <<String>: Material>
    <float[2]: Top left texture UV> <float[2]: Top right texture UV>
    <float[2]: Bottom left texture UV> <float[2]: Bottom right texture UV>
    <<String>: Signal to show>
    <<String>: Signal to hide>
    <<String>: Signal to toggle visibility>

Decal entity data:
    <float[3]: XYZ origin>
    <float[3]: XYZ spray direction>
    <<String>: Texture>
    <u8[4]: RGBA color>
    <u8[3]: RGB emission>
    <u32: Delay in microseconds before fade>
    <u32: Fade duration in microseconds>

Projectile entity data:
    <u8:
        <7 bits: 0>
        <1 bit: Replace initiator with self on hit>
    >
    <float[3]: XYZ initial position>
    <float[3]: XYZ direction and velocity>
    <float: Mass>
    <float: Drag>
    <float: Gravity influence>
    <float: Wind influence>
    <<String>: Model resource path>
    <<String>: Animation>
    <<String>: Signal on hit>

Push entity data:
    <u8:
        <1 bit: Direction based on position>
        <1 bit: Team filter is blacklist>
        <1 bit: Type filter is blacklist>
        <1 bit: Enable type filter>
        <1 bit: Radius is cubic>
        <1 bit: Delete after activation>
        <1 bit: Follow tail of bone>
        <1 bit: Inactive>
    >
    <float[3]: XYZ position>
    <<String>: Entity to follow>
    <<String>: Bone to follow>
    <float[3]: Radius>
    <float: Falloff>
    <u8: Type filter { <Entity type> | ENT_PLAYER } (ignored if 'enable type filter' bit is not set)>
    <<String>: Team filter (if empty, do not filter team)>
    { <float[3]: XYZ velocity> | <float: Velocity> <float[2]: 0.0> }
    <<String>: Signal to activate>

Broadcaster entity data:
    <u8:
        <2 bits: 0>
        <1 bit: Replace initiator with self for output 2>
        <1 bit: Replace initiator with self for output 1>
        <1 bit: Team filter is blacklist>
        <1 bit: Type filter is blacklist>
        <1 bit: Enable type filter>
        <1 bit: Inactive>
    >
    <<String>: Input signal>
    <u8: Type filter { <Entity type> | ENT_PLAYER } (ignored if 'enable type filter' bit is not set)>
    <<String>: Team filter (if empty, do not filter team)>
    <<String>: Output signal 1>
    <<String>: Output signal 2>
    <u8: Repeat>
    <<String>: Signal to activate>
    <<String>: Signal to deactivate>
    <<String>: Signal to toggle activation>

Counter entity data:
    <u8:
        { ENT_COUNTER_CMP_EQ | ENT_COUNTER_CMP_NE
        | ENT_COUNTER_CMP_LT | ENT_COUNTER_CMP_LE
        | ENT_COUNTER_CMP_GT | ENT_COUNTER_CMP_GE }
    >
    <u32: Initial value>
    <u32: Target value>
    <<String>: Signal to increment>
    <<String>: Signal to decrement>
    <<String>: Signal to reset>
    <<String>: Signal to compare to target (if empty, compares on every change)>
    <<String>: Output signal>

Extended counter entity data:
    <u8:
        { ENT_COUNTER_CMP_EQ | ENT_COUNTER_CMP_NE
        | ENT_COUNTER_CMP_LT | ENT_COUNTER_CMP_LE
        | ENT_COUNTER_CMP_GT | ENT_COUNTER_CMP_GE }
    >
    <u64: Initial value>
    <u64: Target value>
    <<String>: Signal to increment>
    <<String>: Signal to decrement>
    <<String>: Signal to reset>
    <<String>: Signal to compare to target (if empty, compares on every change)>
    <<String>: Output signal>

Timer entity data:
    <u32: Initial value in microseconds>
    <<String>: Signal to pause>
    <<String>: Signal to resume>
    <<String>: Signal to reset>
    <<String>: Output signal>

Extended timer entity data:
    <u64: Initial value in microseconds>
    <<String>: Signal to pause>
    <<String>: Signal to resume>
    <<String>: Signal to reset>
    <<String>: Output signal>

Setter entity data:
    <u8:
        <7 bits: 0>
        <1 bit: Multiply by tick time>
    >
    <<String>: Target entity (if empty, use initiator of signal)>
    <u8: Expected <Entity type>>
    <u8: Attribute to set (ENTATTR_...)>
    <u32: Attribute data container index>
    <<String>: Signal to activate>

Audio emitter entity data:
    <u8:
        <3 bits: 0>
        <1 bit: No doppler>
        <1 bit: Radius is cubic>
        <1 bit: Wrap>
        <1 bit: Loop>
        <1 bit: Follow tail of bone>
    >
    <float[3]: XYZ position>
    <<String>: Entity to follow>
    <<String>: Bone to follow>
    <i64: Offset in microseconds>
    <float: Speed>
    <float[2]: Volume>
    <float[2]: Low-pass filter L/R>
    <float[2]: High-pass filter L/R>
    <float: Range>
    <float[3]: Radius>
    <<String>: Sound resource path>
    <<String>: Signal to play>

Dynamic light controller entity data:
    <u8:
        <7 bits: 0>
        <1 bit: Advance pattern while off>
    >
    <u32: Light global ID>
    <u32: Pattern>
    <u32: Pattern advance time in microseconds>
    <<String>: Signal to turn on>
    <<String>: Signal to turn off>
    <<String>: Signal to toggle>

Fast light controller entity data:
    <u8:
        <6 bits: 0>
        <1 bit: Do not interpolate pattern>
        <1 bit: Advance pattern while off>
    >
    <u32: Light global ID>
    <u8[32]: Pattern>
    <u32: Pattern advance time in microseconds>
    <<String>: Signal to turn on>
    <<String>: Signal to turn off>
    <<String>: Signal to toggle>

Entity box corner offsets:
    <float[3]: (+X, +Y, +Z) corner XYZ offset>
    <float[3]: (-X, +Y, +Z) corner XYZ offset>
    <float[3]: (+X, +Y, -Z) corner XYZ offset>
    <float[3]: (-X, +Y, -Z) corner XYZ offset>
    <float[3]: (+X, -Y, +Z) corner XYZ offset>
    <float[3]: (-X, -Y, +Z) corner XYZ offset>
    <float[3]: (+X, -Y, -Z) corner XYZ offset>
    <float[3]: (-X, -Y, -Z) corner XYZ offset>

Entity property:
    <u8:
        { ENTPROP_TYPE_NONE
        | ENTPROP_TYPE_BOOL
        | ENTPROP_TYPE_I8
        | ENTPROP_TYPE_I16
        | ENTPROP_TYPE_I32
        | ENTPROP_TYPE_I64
        | ENTPROP_TYPE_U8
        | ENTPROP_TYPE_U16
        | ENTPROP_TYPE_U32
        | ENTPROP_TYPE_U64
        | ENTPROP_TYPE_F32
        | ENTPROP_TYPE_F64
        | ENTPROP_TYPE_STR }
    >
    <u32: Dimensions>
    { <u32: 0>
    | <u32: Length>
    | <u32: Index in i32/u32/float table to <u32: Length>...> }
    { <u32: 0>
    | <u8: Inline value> <u8[3]: Padding>
    | <i8: Inline value> <u8[3]: Padding>
    | <i16: Inline value> <u8[2]: Padding>
    | <i32: Inline value>
    | <u32: Index in i64/u64/double table to <i64>>
    | <u8: Inline value> <u8[3]: Padding>
    | <u16: Inline value> <u8[2]: Padding>
    | <u32: Inline value>
    | <u32: Index in i64/u64/double table to <u64>>
    | <float: Inline value>
    | <u32: Index in i64/u64/double table to <double>>
    | <String>
    | <u32: 0>
    | <<String table offset>: Offset to <u8: Bitmap>...>
    | <<String table offset>: Offset to <i8>...>
    | <u32: Index in i16/u16 table to <i16>...>
    | <u32: Index in i32/u32/float table to <i32>...>
    | <u32: Index in i64/u64/double table to <i64>...>
    | <<String table offset>: Offset to <u8>...>
    | <u32: Index in i16/u16 table to <u16>...>
    | <u32: Index in i32/u32/float table to <u32>...>
    | <u32: Index in i64/u64/double table to <u64>...>
    | <u32: Index in i32/u32/float table to <float>...>
    | <u32: Index in i64/u64/double table to <double>...>
    | <u32: Index in i32/u32/float table to <String>...> }

