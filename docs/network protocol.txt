- All data should be little endian

Low-level protocol:

    - Used to transport basic info and the high-level protocol
    - Uses UDP with a default port of 45555
    - Current version is 0.0

    client to server:

        query: <u8: 0b10000000>
        query players: <u8: 0b10001000>

        login: <u8: 0b00000011><u8: protocol major version><char[0..127]: username><char: 0><char[0..127]: game>
        login with encryption: <u8: 0b00001111><u8: protocol major version><u8[128]: public key><char[0..127]: username>
                               <char: 0><char[0..127]: game>

        data: <u8: 0b00000101><u32: message #><u8: user index><u32: UID><u64: rand from server><u16: # of
              bytes><u8[0..488]: data>
        encrypted data: <u8: 0b01010101><u32: message #><u8: user index><u32: UID><u16: # of bytes>
                        <u8[0..496]: encrypted (using symmetrical key) data>

        disconnect: <u8: 0b00000000>


    server to client:

        info 1: <u8: 0b10000000><u8: protocol major version><u32: engine version><u8: game version type><u32: game
                version><u8: players><u8: max players><char[0..127]: game>
        info 2: <u8: 0b10000001><char[0..507]: <char[]: server name><char: 0><char[]: description>>
        info 3: <u8: 0b10000010><char[0..507]: game name>
        info 4: <u8: 0b10000011><char[0..507]: map>
        info 5: <u8: 0b10000100><char[0..507]: mods ids (separated by '\0')>
        info 6: <u8: 0b10000101><char[0..507]: mods names (separated by '\0')>
        info 7: <u8: 0b10000110><char[0..507]: tags (separated by '\0')>
        player info 1: <u8: 0b10001000><u8: team id><7 bits: 0><1 bit: ranked><u8[3]: team color><char[0..502]: team
                       name>
        player info 2: <u8: 0b10001001><u8: team id><u8: team rank><u16: ping><i8: platform><char[0..255]: username>

        login success: <u8: 0b00000011><u8: index><u32: UID><u64: rand>
        login with encryption success: <u8: 0b00001111><u8: index><u32: UID><u8[128]: symmetric key encrypted using
                                       public key from client>
        bad login: <u8: 0b11000000><char[0..507]: reason>

        data: <u8: 0b00000101><u32: message #><u16: # of bytes><u8[0..501]: data>
        encrypted data: <u8: 0b01010101><u32: message #><u16: # of bytes><u8[0..501]: data encrypted using symmetrical
                        key>

        disconnect: <u8: 0b00000000><char[0..507]: reason>


    both:

        ack: <u8: 0b11111111><u8: # of messages>[u32: message #]...
        resend: <u8: 0b10101010><u8: # of messages>[u32: message #]...
        keepalive: <u8: 0b00110011>
        ack keepalive: <u8: 0b11001100>


